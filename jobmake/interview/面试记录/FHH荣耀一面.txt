1. 自我介绍
2. 项目
	是跟卫星是实时对接吗？
	数据怎么来的，卫星规模有多少，产生的相关联的数据量的有多少？
	怎么做的，有什么难点，怎么完成的连接算法？
	你这个算法的运行效率，性能怎么样？
	这个项目主要是你负责的吗？
3. c++八股
递归！！！！！！1
以从小到大合并，每次比较当前两个节点的值，然后把较小的作为当前节点，然后调整节点的指向，接着递归合并后续的链表
可以写
class Solution {
public:
	// 这是从小到大合并
	//这个函数的功能是从小到大合并链表，并且返回合并好的链表的表头
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2){
    if(list1 == NULL) return list2;  // 如果有一个节点已经到达空的位置了，只需要返回另一个链表的当前节点就好
    if(list2 == NULL) return list1;
    if(list1->val >= list2->val){
        //找到比较小的那个值的节点作为当前节点，然后接着合并后续的，合并完之后返回当前节点
        list2->next = mergeTwoLists(list1, list2->next);
        return list2;
    }
    else{
        list1->next = mergeTwoLists(list1->next, list2);
        return list1;
    }
    }
}; 
节点值没变，但是指向变了 
其实这样更节省空间，不会内存泄露，如果不需要用到原来的链表了，那这样我觉得是不错的
如果你需要原始的链表，那我其实可以创建新的链表，这样其实思路更简单了

如何处理重复支付的问题
唯一的认证！！！！类似一个序列号，每一个订单生成一个序列号，一串很长的字符串把
